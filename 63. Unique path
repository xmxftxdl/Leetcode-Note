class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        vector<vector<int>>result(obstacleGrid.size());
        if(obstacleGrid[0][0]==1)
            return 0;
        for (int i = 0; i < result.size(); i++) 
            result[i].resize(obstacleGrid[0].size());
        for(int i=0;i<obstacleGrid.size();i++){
          if(obstacleGrid[i][0]==1&&obstacleGrid[0].size()==1)
              return 0;
          if(obstacleGrid[i][0]==0)
           result[i][0]=1;
          if(obstacleGrid[i][0]==1)
                break;
        }
        for(int i=0;i<obstacleGrid[0].size();i++){
            if(obstacleGrid[0][i]==1&&obstacleGrid.size()==1)
                return 0;
            if(obstacleGrid[0][i]==0)
            result[0][i]=1;
            if(obstacleGrid[0][i]==1)
                break;
        }
        for(int i=1;i<obstacleGrid.size();i++){
            if(obstacleGrid[i][0]==1&&obstacleGrid[0].size()==1)
                return 0;
            for(int j=1;j<obstacleGrid[0].size();j++){
                if(obstacleGrid[i][j]==1||i==0||j==0);
                if(obstacleGrid[i][j]==0)
                    result[i][j]=result[i-1][j]+result[i][j-1];
            }
        }
    return result[result.size()-1][result[0].size()-1];
    }
};
