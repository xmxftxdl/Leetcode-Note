/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int countlength(ListNode *head){
        int count=0;
        while(head){
            count++;
            head=head->next;
        }
        return count;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
    ListNode *first=headA;
    ListNode *second=headB;
    int lena=countlength(headA);
    int lenb=countlength(headB);
    int n=lena-lenb;
    for(int i=0;i<abs(n);i++){
        if(n>0){
            first=first->next;
        }
        else
            second=second->next;
    }
    while(first&&second){
        if(second==first)
            return first;
        second=second->next;
        first=first->next;
    }
        return NULL;
    }
};
