class Solution {
private:
 
    void createHistogram(const vector<vector<char>>& matrix, vector<int>&heights, int row)
    {
        int col = matrix[0].size();
        for (int j = 0; j < col; j++)
        {
            heights[j] = matrix[row][j] == '0' ? 0 : (heights[j] + 1);
        }
    }
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.size()==0||matrix[0].size()==0)
            return 0;
        vector<int>height;
        int row=matrix.size();
        int size=0;
        for(int i=0;i<row;i++){
            createHistogram(matrix,height,i);
            stack<int>h;
            int k=0;
            while(k<height.size()){
                if(k==0||height[k]>h.top()){
                h.push(height[k]);
                    k++;    
                }
                else{
                     int j = index.top();
                    index.pop();
                    size = max(size, heights[j] * (index.empty() ? i : (i - index.top() - 1)));
                }
            }
        }
    return size;
    }
};
