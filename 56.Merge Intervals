class Solution {
public:
    vector<Interval> merge(vector<Interval>& intervals) {
        vector<Interval>result;
        if(intervals.size()<=1)
            return intervals;
        sort(intervals.begin(),intervals.end(),[](Interval &a,Interval &b){return a.start<b.start;});
        result.push_back(intervals[0]);
        for(int i=0;i<intervals.size()-1;i++){
            if(intervals[i].end>=intervals[i+1].start&&intervals[i].end<intervals[i+1].end)
            {
                result.pop_back();
                intervals[i+1].start=intervals[i].start;
                result.push_back(intervals[i+1]);
                continue;
            }
            if(intervals[i].end>=intervals[i+1].start&&intervals[i].end>=intervals[i+1].end){
                result.pop_back();
                intervals[i+1].start=intervals[i].start;
                intervals[i+1].end=intervals[i].end;
                result.push_back(intervals[i+1]);
                continue;
            }
            else{
                
                result.push_back(intervals[i+1]);
                continue;
            }
        }
    return result;
    }
};
