class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>foursum;
        vector<int>s;
        sort(nums.begin(),nums.end());
        if(nums.size()<4)
            return foursum;
        for(int i=0;i<nums.size()-3;++i){
            while(i>0&&nums[i]==nums[i-1])
               ++i;
            for(int j=i+1;j<nums.size()-2;++j){
                while(j>i+1&&nums[j]==nums[j-1])
                    ++j;
                int m=j+1;
                int n=nums.size()-1;
                while(m<n){
                    int sum=nums[i]+nums[j]+nums[n]+nums[m];
                if(sum>target)
                    --n;
                if(sum<target)
                    ++m;
                if(sum==target){
                    vector<int>s;
                    s.push_back(nums[i]);
                    s.push_back(nums[j]);
                    s.push_back(nums[m]);
                    s.push_back(nums[n]);
                    foursum.push_back(s);
                    m++;
                    n--;
                while(m<n&&nums[n]==nums[n+1])
                    --n;
                while(m<n&&nums[m]==nums[m-1])
                   ++m;
                }
                }
             
            }
            
        
        }
    return foursum;
    }
};
//Same as the 3Sum.
