/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int findmax(vector<int>&nums,int begin,int end,int &max){
        if(begin==end)
            return -1;
        
            int index=begin;
            max=nums[begin];
            for(int i=begin+1;i<end;i++){
                if(nums[i]>max){
                    max=nums[i];
                    index=i;
                }
            }
            return index;
    }
    TreeNode* getSubTree(vector<int>&nums,int begin,int end){
        int max;
        int index=findmax(nums,begin,end,max);
        if(index==-1)
            return NULL;
        else{
            TreeNode* temp=new TreeNode(max);
            temp->left=getSubTree(nums,begin,index);
            temp->right=getSubTree(nums,index+1,end);
            return temp;
        }
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return getSubTree(nums,0,nums.size());
    }
};
